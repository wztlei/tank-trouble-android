/**
     *  Display an alert dialog with a single button saying Ok.
     *
     * @param message  the string storing the message of the alert dialog to be created
     */
    private void createOkAlertDialog(String message) {

        // Build an alert dialog using the title and message
        AlertDialog.Builder builder = new AlertDialog.Builder(mActivity);
        builder.setTitle("")
                .setMessage(message)
                .setPositiveButton("Ok", new DialogInterface.OnClickListener() {
                    public void onClick(DialogInterface dialog, int id) {}
                });

        // Get the AlertDialog from create() and show it
        AlertDialog dialog = builder.create();
        dialog.show();
    }

private void testDatabase(){
        long startTime = System.currentTimeMillis();
        final int timeIndex = firebaseStartTimes.size();

        firebaseStartTimes.add(startTime);

        // Write a message to the database
        FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();
        DatabaseReference database = firebaseDatabase.getReference("testData/branch/sub");
        DatabaseReference database2 = firebaseDatabase.getReference();
        database2.child("users").child("thing2").child("username").setValue("dskdfjdsfkjhf");
        DatabaseReference database3 = database2.child("new").push();
        DatabaseReference databaseReference4 = firebaseDatabase.getReference("abc");
        databaseReference4.push().setValue(2345325);

        HashMap<String, Integer> coord = new HashMap<>();
        coord.put("x", 1);
        coord.put("y", 22);
        database3.setValue(coord);


        database.setValue(timeIndex);

        // Create new post at /user-posts/$userid/$postid and at
        // /posts/$postid simultaneously
        String key = database.child("posts").push().getKey();

        // Read from the database
        database.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                // This method is called once with the initial value and again
                // whenever data at this location is updated.
                String value = dataSnapshot.getValue().toString();
                Log.d(TAG, "Value is: " + value);

                long endTime = System.currentTimeMillis();
                long responseTime = endTime - firebaseStartTimes.get(timeIndex);
                Log.d(TAG, "firebase response time for item num=" + timeIndex + " is time=" + responseTime);
            }

            @Override
            public void onCancelled(DatabaseError error) {
                // Failed to read value
                Log.w(TAG, "Failed to read value.", error.toException());
            }
        });

    }